public void ConfigureServices(IServiceCollection services)
{
    //  load configuration from appsettings.json
    services.AddOptions();
    // needed to store rate limit counters and ip rules
    services.AddMemoryCache();
    //load general configuration from appsettings.json

services.Configure<IpRateLimitOptions>(Configuration.GetSection("IpRateLimiting"));
    //load ip rules from appsettings.json
    services.Configure<IpRateLimitPolicies>(Configuration.GetSection("IpRateLimitPolicies"));
    // inject counter and rules stores
    services.AddSingleton<IIpPolicyStore, MemoryCacheIpPolicyStore>();
    services.AddSingleton<IRateLimitCounterStore, MemoryCacheRateLimitCounterStore>();
    // Add framework services.
    services.AddMvc();
}
public void Configure(IApplicationBuilder app, IHostingEnvironment env, ILoggerFactory loggerFactory)
{
    loggerFactory.AddConsole(Configuration.GetSection("Logging"));
    loggerFactory.AddDebug();
    app.UseIpRateLimiting();
    app.UseMvc();
}

Also configure the JSON endpoints for defining the rules about number of requests:

"IpRateLimiting": {
    "RealIpHeader": "X-Real-IP",
    "HttpStatusCode": 429,
    "IpWhitelist": [ "127.0.0.1", "::1/10", "192.168.0.0/24" ],
    "EndpointWhitelist": [ "get:/api/license", "*:/api/status" ],
    "ClientWhitelist": [ "dev-id-1", "dev-id-2" ],
    "GeneralRules": [
      {
        "Endpoint": "*",
        "Period": "10m",
        "Limit": 10
      },
     ]
 }
